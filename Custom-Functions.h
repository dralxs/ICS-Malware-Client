#include <stdio.h>
#include <stdlib.h>
#include <windows.h>
#include <winternl.h>
#include <fstream>
#include <iostream>
#include <ctype.h>

PPEB getPeb();
HMODULE getModuleHandleCustom(LPWSTR name);
PVOID getProcAddressCustom(PVOID dllAddress, DWORD functionHash);
bool getImageBaseAddr(LPVOID& destImageBase, HANDLE pHandle);
bool lauchSuspendProcess(LPSTR target, LPPROCESS_INFORMATION pi);

// Prototypes
typedef NTSTATUS(NTAPI* _NtQueryInformationProcess) (HANDLE ProcessHandle, DWORD ProcessInformationCLass, PVOID ProcessInformation, DWORD ProcessInformationLength, PWORD ReturnLength);
typedef NTSTATUS(NTAPI* _NtAllocateVirtualMemory)(HANDLE, PVOID, ULONG_PTR, PSIZE_T, ULONG, ULONG);
typedef NTSTATUS(NTAPI* _NtProtectVirtualMemory)(HANDLE, PVOID*, SIZE_T*, ULONG, PULONG);
typedef NTSTATUS(NTAPI* _NtWriteVirtualMemory)(HANDLE ProcessHandle, PVOID BaseAddress, PVOID Buffer, SIZE_T NumberOfBytesToWrite, SIZE_T* NumberOfBytesWritten);
typedef NTSTATUS(NTAPI* _NtClose)(HANDLE ObjectHandle);
typedef NTSTATUS(NTAPI* _NtWaitForSingleObject)(HANDLE Handle, BOOLEAN Alertable, PLARGE_INTEGER Timeout);